[
    // selection pairing with *, _ and `
    {
        "keys": ["*"],
        "command": "insert_snippet",
        "args": {
            "contents": "*${0:$SELECTION}*"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/Default/Delete Left Right.sublime-macro"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "\\*$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\*",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["tab"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Start List Item Tab.sublime-macro"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "\\*$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\*",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["tab"],
        "command": "mde_indent_list_item",
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^\\s*(>\\s*)?[*+\\-]\\s+$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^$",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["tab"],
        "command": "mde_indent_list_multiitem",
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "markup.list",
            "match_all": true
        }]
    }, {
        "keys": ["shift+tab"],
        "command": "mde_indent_list_item",
        "args": {
            "reverse": true
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^\\s*(>\\s*)?[*+\\-]\\s+$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^$",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["shift+tab"],
        "command": "mde_indent_list_multiitem",
        "args": {
            "reverse": true
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "markup.list",
            "match_all": true
        }]
    }, {
        "keys": ["_"],
        "command": "insert_snippet",
        "args": {
            "contents": "_${0:$SELECTION}_"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/Default/Delete Left Right.sublime-macro"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "_$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^_",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["`"],
        "command": "insert_snippet",
        "args": {
            "contents": "`${0:$SELECTION}`"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["`"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Skip Closing Character.sublime-macro"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^`",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/Default/Delete Left Right.sublime-macro"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "`$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^`",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    },

    // Headers
    {
        "keys": ["#"],
        "command": "insert_snippet",
        "args": {
            "contents": "#${0: ${SELECTION/(^ | $)//g} }#"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "not_regex_contains",
            "operand": "#{6}",
            "match_all": true
        }, {
            "key": "setting.mde.match_header_hashes",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["#"],
        "command": "insert_snippet",
        "args": {
            "contents": "#${0: ${SELECTION/(^ | $)//g}}"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "not_regex_contains",
            "operand": "#{6}",
            "match_all": true
        }, {
            "key": "setting.mde.match_header_hashes",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["#"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Padded Headline.sublime-macro"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "#{6}",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "#+",
            "match_all": true
        }, {
            "key": "setting.mde.match_header_hashes",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["#"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Padded Headline.sublime-macro"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "#{6}",
            "match_all": true
        }, {
            "key": "setting.mde.match_header_hashes",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["enter"],
        "command": "insert_snippet",
        "args": {
            "contents": " ${TM_CURRENT_LINE/(#+?)[^#].*$/$1\n/}"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^#+\\s+[^#]",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "not_regex_contains",
            "operand": "#+$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\s*$",
            "match_all": true
        }, {
            "key": "setting.mde.match_header_hashes",
            "operator": "equal",
            "operand": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Extend lists
    {
        "keys": ["enter"],
        "command": "insert_snippet",
        "args": {
            "contents": "${TM_CURRENT_LINE/^(\\s*([*\\-+])(\\s+)).*/\n$2$3/}"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^(\\s*([*\\-+])\\s+)\\S.*",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Extend lists with GFM tasks
    {
        "keys": ["enter"],
        "command": "insert_snippet",
        "args": {
            "contents": "${TM_CURRENT_LINE/^(\\s*([*\\-+])(\\s+)\\[[ x]\\](\\s+)).*/\n$2$3[ ]$4/}"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^(\\s*([*\\-+])\\s+)\\[[ x]\\]\\s+\\S.*",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Extend Numbered Lists
    {
        "keys": ["enter"],
        "command": "mde_number_list",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^(\\s*(\\d+\\.)\\s+)\\S.*",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Extend Numbered Reference
    {
        "keys": ["enter"],
        "command": "mde_number_list_reference",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^(\\s*\\[(\\d+)\\]:\\s*)\\S.*",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Remove empty list item
    {
        "keys": ["enter"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Remove Empty List Item.sublime-macro"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^(\\s*(\\[\\d+\\]:|[*\\-+]|\\d+\\.)\\s+)$",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "regex_contains",
            "operand": "^\\s*$",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },
    // Extend blockquote
    {
        "keys": ["enter"],
        "command": "insert_snippet",
        "args": {
            "contents": "${TM_CURRENT_LINE/^(\\s*((>+\\s+)+([*\\-+]\\s+)?)).*/\n$2/}"
        },
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^\\s*>+\\s+",
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false
        }]
    },
    // Convert to blockquote
    {
        "keys": [">"],
        "command": "run_macro_file",
        "args": {
            "file": "Packages/MarkdownEditingFork/macros/Convert to Blockquote.sublime-macro"
        },
        "context": [{
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    }, {
        "keys": ["tab"],
        "command": "mde_complete_underlined_header",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "auto_complete_visible",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "regex_contains",
            "operand": "^\\-+$|^\\=+$",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.raw",
            "match_all": true
        }]
    },

    // modify [] pairing so that selection is removed after pairing, ready for [] or ()
    {
        "keys": ["["],
        "command": "insert_snippet",
        "args": {
            "contents": "[$SELECTION]$0"
        },
        "context": [{
            "key": "setting.auto_match_enabled",
            "operator": "equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["shift+tab"],
        "command": "mde_fold_section",
        "context": [{
            "key": "setting.mde.keymap_disable.fold_section",
            "operator": "not_equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "not_regex_match",
            "operand": "^\\s+",
            "match_all": true
        }, {
            "key": "following_text",
            "operator": "not_regex_match",
            "operand": "^$",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["shift+tab"],
        "command": "mde_fold_section",
        "context": [{
            "key": "setting.mde.keymap_disable.fold_section",
            "operator": "not_equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": true,
            "match_all": true
        }, {
            "key": "preceding_text",
            "operator": "not_regex_match",
            "operand": "^\\s+",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "not_equal",
            "operand": "markup.list",
            "match_all": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["shift+tab"],
        "command": "mde_fold_section",
        "context": [{
            "key": "setting.mde.keymap_disable.fold_section",
            "operator": "not_equal",
            "operand": true
        }, {
            "key": "selection_empty",
            "operator": "equal",
            "operand": false,
            "match_all": true
        }, {
            "key": "text",
            "operator": "regex_contains",
            "operand": "^(#{1,6}(?!#))|^(-{3,}|={3,})$"
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }, {
        "keys": ["alt+shift+f"],
        "command": "mde_magic_footnotes",
        "context": [{
            "key": "setting.mde.keymap_disable.magic_footnotes",
            "operator": "not_equal",
            "operand": true
        }, {
            "key": "selector",
            "operator": "equal",
            "operand": "text.html.markdown",
            "match_all": true
        }]
    }
]
